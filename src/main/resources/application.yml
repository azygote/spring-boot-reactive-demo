management:
  endpoints:
    web:
      base-path: /api/actuator
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true

spring:
  http:
    encoding:
      force: true
  datasource:
    url: jdbc:postgresql://${postgresql-host}:5432/db_sbrd
    driver-class-name: org.postgresql.Driver
    username: gty
    password: 123456
  jpa:
    hibernate:
      ddl-auto: none
  cache:
    type: redis
    redis:
      time-to-live: 2d
#     key-prefix: 'spring-boot-reactive-demo:cache:'
  redis:
    host: ${redis-host}
    password: 123456
    timeout: 100ms
  data:
    redis:
      repositories:
        enabled: false
  rabbitmq:
    host: ${rabbitmq-host}
  kafka:
    bootstrap-servers: ${kafka-host}:9092
    consumer:
      group-id: demo-group
      auto-offset-reset: earliest
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    producer:
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
    template:
      default-topic: demo-topic
  session:
    store-type: redis
  gson:
    serialize-nulls: true

sbrd:
  storage-content: "These violent delights have violent ends."
