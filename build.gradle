import java.nio.file.FileSystems
import java.util.stream.Collectors

plugins {
    id 'java'
    id 'idea'
    id 'project-report'
    id 'org.springframework.boot' version '2.1.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
}

group = 'org.gty'
version = '1.0.2.RELEASE'
description = 'Spring Boot Reactive Demo'

sourceCompatibility = 11
targetCompatibility = 11
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

repositories {
    jcenter()
}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
    mbg
}

bootRun {
    systemProperties['spring.profiles.active'] = project.gradle.startParameter.systemPropertiesArgs['spring.profiles.active']
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-amqp'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-starter-cache'
//  compile 'org.springframework.boot:spring-boot-starter-data-jpa'
//  compile 'org.springframework.boot:spring-boot-starter-data-jdbc'
//  compile 'org.springframework.boot:spring-boot-starter-data-ldap'
//  compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
//  compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
//  compile 'org.springframework.boot:spring-boot-starter-json'
    compile 'org.springframework.boot:spring-boot-starter-log4j2'
    compile 'org.springframework.boot:spring-boot-starter-quartz'
    compile 'org.springframework.boot:spring-boot-starter-security'
//  compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
//  compile 'org.springframework.boot:spring-boot-starter-undertow'
    compile 'org.springframework.boot:spring-boot-starter-validation'
//  compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
//  compile 'org.springframework.boot:spring-boot-starter-websocket'

//  runtime 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.retry:spring-retry:1.2.2.RELEASE'
    compile 'org.springframework.session:spring-session-data-redis:2.1.1.RELEASE'
    compile 'org.springframework.kafka:spring-kafka:2.2.1.RELEASE'
//  compile 'org.springframework.security:spring-security-ldap:4.2.4.RELEASE'

    compile 'org.flywaydb:flyway-core:5.2.1'
    compile 'org.postgresql:postgresql:42.2.5'
    compile 'com.lmax:disruptor:3.4.2'
//  compile 'io.jsonwebtoken:jjwt:0.9.0'
//  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.7'
//  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.9.7'
    compile 'com.zaxxer:HikariCP:3.2.0'
    compile 'com.google.guava:guava:27.0.1-jre'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    compile 'com.ibm.icu:icu4j:63.1'

    compile 'commons-beanutils:commons-beanutils:1.9.3'
    compile 'commons-codec:commons-codec:1.11'
    compile 'commons-fileupload:commons-fileupload:1.3.3'
    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.commons:commons-lang3:3.8.1'
    compile 'org.apache.commons:commons-text:1.6'
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'org.apache.commons:commons-collections4:4.2'
    compile 'org.apache.commons:commons-compress:1.18'
    compile 'org.apache.commons:commons-pool2:2.6.0'

//  compile 'org.thymeleaf:thymeleaf:3.0.9.RELEASE'
//  compile 'org.thymeleaf:thymeleaf-spring5:3.0.9.RELEASE'
//  compile 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.1.RELEASE'
//  compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.2.RELEASE'
//  compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0'

    compile 'org.hibernate.validator:hibernate-validator:6.0.13.Final'
//  compile 'javax.validation:validation-api:2.0.1.Final'
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile 'javax.xml.bind:jaxb-api:2.3.0'

//  compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
    compile 'com.github.pagehelper:pagehelper:5.1.8'
    compile 'tk.mybatis:mapper-spring-boot-starter:2.1.0'

//  testCompile 'org.springframework.boot:spring-boot-starter-test'
//  testCompile 'org.springframework.security:spring-security-test'
//  testCompile 'io.projectreactor:reactor-test'
//  testCompile 'com.h2database:h2:1.4.196'

    mbg 'org.mybatis.generator:mybatis-generator-core:1.3.7'
    mbg 'org.postgresql:postgresql:42.2.5'
}

task mbg {
    doLast {
        ant.taskdef(name: 'mbg',
                classname: 'org.mybatis.generator.ant.GeneratorAntTask',
                classpath: configurations.mbg.asPath)

        def resourcesDir = sourceSets.main.resources.srcDirs.stream().collect(Collectors.toUnmodifiableList()).get(0)
        
        ant.mbg(overwrite: true,
                configfile: "$resourcesDir${FileSystems.default.separator}generator${FileSystems.default.separator}generatorConfig.xml",
                verbose: true)
    }
}

clean.doLast {
    project.delete "$projectDir${FileSystems.default.separator}out${FileSystems.default.separator}"
}

task buildApp(type: GradleBuild) {
    tasks = ['clean', 'bootJar']
}
